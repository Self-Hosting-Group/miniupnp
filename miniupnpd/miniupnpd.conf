# miniupnpd.conf: MiniUPnP IGD & PCP/NAT-PMP daemon configuration file
# More information at https://miniupnp.tuxfamily.org or http://miniupnp.free.fr

# CAUTION: Mixing up WAN and LAN interfaces may introduce security risks!
# Be sure to assign the correct interfaces to LAN and WAN and consider
# implementing client permission rules at the bottom of this configuration file

### External WAN network ###
############################
# WAN network interface name
#ext_ifname=eth1

# If WAN network interface is different for IPv6 than for IPv4 set ext_ifname6
#ext_ifname6=eth2

# If the WAN interface has several IP addresses specify the one to use below
# Setting ext_ip is also useful in double NAT setup, you can declare here
# the public IP address.
#ext_ip=

# The WAN interface must have a public IP address. Otherwise it is behind NAT
# and port mapping is not possible. In some cases WAN interface can be
# behind unrestricted full-cone NAT 1:1 when all incoming traffic is NAT-ed
# and routed to WAN interfaces without any filtering. In this cases miniupnpd
# needs to know the public IP address and it can be learnt by asking external
# server via STUN protocol. Following option enable retrieving external
# public IP address from STUN server and detection of NAT type. You need
# to specify also external STUN server in stun_host option below.
# This option is disabled by default.
#ext_perform_stun=yes

# Specify STUN server, either hostname or IP address
# Some public STUN servers:
#  stunserver.stunprotocol.org
#  stun.sipgate.net
#  stun.xten.com
#  stun.l.google.com (on non standard port 19302)
#ext_stun_host=stunserver.stunprotocol.org
# Specify STUN UDP port, by default it is standard port 3478.
#ext_stun_port=3478

### Internal LAN network ###
############################
# LAN network interface name or IPv4/netmask
# It is mandatory to use the network interface name in order to enable IPv6
# listening_ip can be specified more than once for multiple network interfaces
# HTTP is available on all interfaces.
# When MULTIPLE_EXTERNAL_IP is enabled, the external IP
# address associated with the subnet follows. For example:
#  listening_ip=192.168.0.1/24 88.22.44.13
# When MULTIPLE_EXTERNAL_IP is disabled, you can list associated network
# interfaces (for bridges):
#  listening_ip=bridge0 em0 wlan0
#listening_ip=eth0
#listening_ip=192.168.0.1/24
#listening_ip=10.5.0.0/16

### General daemon configuration and enabled protocols ###
##########################################################
# Lease file location
#lease_file=/var/log/upnp.leases

# Unused rules cleaning.
# Clean process work interval in seconds. default to 0 (disabled).
# a 600 seconds (10 minutes) interval makes sense
clean_ruleset_interval=600
# never remove any rule before this threshold for the number
# of redirections is exceeded. default to 20
#clean_ruleset_threshold=10

# Enable PCP/NAT-PMP protocol support (default no)
#enable_pcp_pmp=yes

# Enable UPnP IGD protocol support (default yes)
#enable_upnp=no

# If compiled with IGD_V2 defined, force reporting IGDv1 in rootDesc (default
# is no)
#force_igd_desc_v1=no

# Disable IPv6 (default is no : IPv6 enabled if enabled at build time)
#ipv6_disable=yes

### PCP/NAT-PMP protocol configuration ###
##########################################
# Port mapping lifetime (minimum and maximum in seconds)
# 120s and 86400s (24h) are suggested values from the PCP standard
#min_lifetime=120
#max_lifetime=86400

### UPnP IGD protocol configuration ###
#######################################
# Port for HTTP/SOAP (0 means random, default)
#http_port=0
# Port for HTTPS/SOAP for IGDv2 (0 means random, default)
#https_port=0

# Bitrates reported by daemon in bits per second
# by default miniupnpd tries to get WAN interface speed
#bitrate_down=100000000
#bitrate_up=10000000

# Default presentation URL is HTTP address on port 80
# If set to an empty string, no presentationURL element will appear
# in the XML description of the device, which prevents MS Windows
# from displaying an icon in the "Network Connections" panel.
#presentation_url=http://www.mylan.internal/

# Report system uptime instead of daemon uptime
system_uptime=yes

# Notify interval (in seconds, default 30)
#notify_interval=240
notify_interval=60

# UUID, generate your own UUID with "make genuuid"
uuid=00000000-0000-0000-0000-000000000000

# Daemon's model and serial number when reporting to clients
# (in XML description)
#model_number=1
#serial=00000000

# Path to the UNIX socket used to communicate with MiniSSDPd
# If running, MiniSSDPd will manage M-SEARCH answering.
# default is /var/run/minissdpd.sock
#minissdpdsocket=/var/run/minissdpd.sock

### Linux nftables/iptables firewall configuration ###
######################################################
# Table names for nftables (default "filter" for both)
#upnp_table_name=filter
#upnp_nat_table_name=filter

# Chain names for nftables and iptables
# nftables defaults: miniupnpd, prerouting_miniupnpd, postrouting_miniupnpd
# iptables defaults: MINIUPNPD, MINIUPNPD, MINIUPNPD-POSTROUTING
#upnp_forward_chain=miniupnpd
#upnp_nat_chain=prerouting_miniupnpd
#upnp_nat_postrouting_chain=postrouting_miniupnpd
#upnp_nftables_family_split=no

### BSD's pf firewall configuration ###
#######################################
# Log packets in pf (default is no)
#packet_log=yes

# Anchor name in pf (default is miniupnpd)
#anchor=miniupnpd

# Tag name in pf
#tag=tag_name1

# To enable the next few configuration options, see compile time
# PF_ENABLE_FILTER_RULES (file config.h)

# ALTQ queue in pf
#queue=queue_name1

# Make filter rules in pf quick or not (default yes)
#quickrules=no

### Custom UPnP IGD manufacturer information ###
################################################
# To enable the next few configuration options, see compile time
# ENABLE_MANUFACTURER_INFO_CONFIGURATION (file config.h)

# Name of this service, default is "`uname -s` router"
#friendly_name=MiniUPnPd router
# Manufacturer name, default is "`uname -s`"
#manufacturer_name=Manufacturer corp
# Manufacturer URL, default is URL of OS vendor
#manufacturer_url=https://miniupnp.tuxfamily.org/
# Model name, default is "`uname -s` router"
#model_name=Router Model
# Model description, default is "`uname -s` router"
#model_description=Very Secure Router - Model
# Model URL, default is URL of OS vendor
#model_url=https://miniupnp.tuxfamily.org/

### Secure mode and client permission rules ###
###############################################
# Secure mode, IGD clients can only add mappings to their own IP (default yes)
#secure_mode=no
# Allow PCP THIRD_PARTY option for MAP and PEER opcodes (default no)
#pcp_allow_thirdparty=yes

# Client permission rules (only support rules for IPv4, IPv6 always allowed)
# (allow|deny) (ext port range) IPv4/mask (int port range) (optional regex)
# A port range is <min port>-<max port> or <port> if there is only
# one port in the range. IPv4/mask format must be nnn.nnn.nnn.nnn/nn.
# In general, it is recommended to only allow mapping of ports >= 1024. For
# individual clients (/32 netmask), a rule can be added to allow opening ports
# below 1024 such as the ports 80 and 443 for HTTP/HTTPS.
# End the rule set with "deny 1-65535 0.0.0.0/0 1-65535"
# It is recommended that users modify the IP ranges to match their own internal
# networks, and also consider implementing network-specific restrictions
# CAUTION: Failure to enforce any rules may permit insecure requests to be made!
allow 1024-65535 192.168.0.0/24 1024-65535
# disallow requests whose description string matches the given regex
# deny 1024-65535 192.168.1.0/24 1024-65535 "My evil app ver [[:digit:]]*"
allow 1024-65535 192.168.1.0/24 1024-65535
allow 1024-65535 192.168.0.0/23 22
allow 12345 192.168.7.113/32 54321
deny 0-65535 0.0.0.0/0 0-65535
